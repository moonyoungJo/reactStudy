자바스크립트 표준은 점차 개발 효율을 높혀주는 문법을 추가하고 있습니다.
반면 표준이 발표되고 실제 웹브라우저에서 지원해주기까지는 오랜 시간이 걸립니다.
그렇다고 미래에는 분명히 지원될 좋은 문법들을 사용하지 않는다는 것은 문제가 있습니다.

바벨은 이런 어려움을 극복해줍니다. 자바스크립트를 위한 다목적 컴파일러로 최근 버전의 
자바스크립트로 작성된 코드를 이전 버전의 코드로 변환해주는 역할을 합니다.
또한 자바스크립트 뿐만 아니라 React의 JSX 형식도 변환해 줍니다.

npm install --global babel-cli babel-preset-es2015
babel arrow-test.js --presets=es2015 -o arrow-test.out.js

바벨 전용 설정 파일 만들기
mkdir babeltest
cd babeltest
npm init
npm install --save-dev babel-cli
npm install --save-dev babel-preset-es2015
.babelrc 파일 생성
bmi.js 생성
babel bmi.js -o bmi.out.js

대게 package.json에 명령어로 등록해서 많이 쓴다.
"build": "babel bmi.js -o bmi.out.js"
npm run build

babel bmi.js -w -o bmi.out.js를 하면 감시모드로 저장할때마다 변환이 일어난다.
대게 package.json에
"watch": "babel bmi.js -w -o bmi.out.js"

디렉터리 내부의 일괄 변환하는 명령어
babel src -d dest

디렉터리 전체 감시
babel src -w -d dest

코드 압축해서 변환
babel src --compact=true -d dest

소스맵도 출력하기
바벨로 변환 후 디버깅을 하면 코드의 줄 번호가 일치하지 않아 어려움이 있습니다.
이때 소스 맵 기능을 이용하면 변환 전의 코드와 변환 후의 코드를 중간에서 매개해주어
디버깅을 할 수 있습니다.
babel bmi.js -o bim.out.js --source-maps

