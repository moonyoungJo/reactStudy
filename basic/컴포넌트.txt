리액트는 HTML을 컴포넌트로 정의하고 이를 자유롭게 조합할 수 있다는 장점을 가지고 있습니다.
컴포넌트는특정 기능을 가진 범용적인 부품을 나타내는 용어입니다.

리액트로 컴포넌트 만들기
-함수 : JSX를 반환하면 된다. HTML 요소 태그 속성들이 함수의 첫번째 매개변수(객체)로 전달된다
-클래스 : React.Component 클래스를 상속받아서 사용한다.

컴포넌트가 상태를 가질 경우 컴포넌트의 state 객체를 이용. 값을 변경할 때 setState메서드를 이용하면
자동으로 render메서드를 함께 호출해서 컴포넌트를 재구성


클래스 컴포넌트에서 이벤트핸들러 만들기
this 객체는 function으로 생성할 때와 화살표 함수를 생성할 때 다르게 동작하므로 주의할 필요가 있습니다.

-render() 내부에서 화살표 함수를 이용해 핸들러 정의
class <컴포넌트 이름> extends React.Component {
    render() {
        const handler = (e) => alert('Hello')
        return <button onClick={handler}>Click</button>
    }
}
-클래스의 메서드로 정의하고 this 바인드하기
class <컴포넌트 이름> extends React.Component {
    constructor() {
        this.classHandler = this.classHandler.bind(this)
    }
    classHandler() {
        ....
    }
    render() {
        return <button onClick={this.classHandler}>Click</button>
    }
}
-클래스 메서드로 정의하고 화살표 함수로 호출하기
class <컴포넌트 이름> extends React.Component {
    
    classHandler() {
        ....
    }
    render() {
        return <button onClick={e => this.classHandler(e)}}>Click</button>
    }
}